// Employee ageexports.kind = 'calculated';exports.type = 'number';exports.onGet = function ageOnGet() {    "use strict";    var        today,        interval,        nbYears,        age;    if (this.birthDate === null || this.birthDate === undefined) {        age = 0;    } else {        today = new Date();        interval = today.getTime() - this.birthDate.getTime();        nbYears = Math.floor(interval / (1000 * 60 * 60 * 24 * 365.25));        age = nbYears;    }    return age;};exports.onSort = function ageOnSort(ascending) {    "use strict";    return (ascending ? "birthDate desc" : "birthDate");};exports.onQuery = function ageOnQuery(compOperator, valueToCompare) {    "use strict";    var        not,        birthYearFromAgePlusOne,        lowerlimit,        upperlimit,        result;    if (valueToCompare === null) {        not = ["=", "=="].indexOf(compOperator) > -1 ? 'not' : '';        result = "birthDate is" + not + 'null';    } else {        upperlimit = new Date();        birthYearFromAgePlusOne = upperlimit.getFullYear() - valueToCompare;        upperlimit.setFullYear(birthYearFromAgePlusOne);        lowerlimit = new Date();        lowerlimit.setFullYear(birthYearFromAgePlusOne - 1);        switch (compOperator) {        case '=':        case '==':        case '!=':        case '!==':            result = "birthDate >= '" + lowerlimit.toISOString() + "'";            result += " and birthDate < '" + upperlimit.toISOString() + "'";            if (['!=', '!=='].indexOf(compOperator) > -1) {                result = "not (" + result + ")";            }            break;        case '>':            result = "birthDate < '" + lowerlimit.toISOString() + "'";            break;        case '>=':            result = "birthDate <= '" + upperlimit.toISOString() + "'";            break;        case '<':            result = "birthDate > '" + upperlimit.toISOString() + "'";            break;        case '<=':            result = "birthDate >= '" + lowerlimit.toISOString() + "'";            break;        default:            console.warn('unknown operator:', compOperator);            result = null;        }    }    return result;};